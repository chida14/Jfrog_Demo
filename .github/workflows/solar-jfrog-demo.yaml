name: "Solar-JFrog"

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      # - 'feature/*'

permissions:
  contents: read
  security-events: write
  id-token: write

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  build_test:
     runs-on: ubuntu-latest
       
     steps:
       - name: Checkout
         uses: actions/checkout@v3
         
       - name: Setup JFrog CLI
         uses: jfrog/setup-jfrog-cli@v4
         env:  
           JF_URL: ${{ vars.JF_URL }}
           JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
           
       - name: Setup Node npm
         uses: actions/setup-node@v3
         with:
            node-version: 20
           
       - name: Set CLI Config
         run: jf npm-config --global=true --repo-resolve=solar-npm --repo-deploy=solar-npm
           
       - name: Install Deps
         run: jf npm install
           
       - name: Run tests
         run: npm test
      
       - name: Check Code Coverage
         continue-on-error: true
         run: npm run coverage

       - name: Publish
         run: jf npm publish

       - name: Archive Test Result
         uses: actions/upload-artifact@v4
         with: 
           name: Mocha-Test-Result
           path: test-results.xml
       
       - name: Archive Test Result
         uses: actions/upload-artifact@v4
         with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 1
        
       - name: Publish Build info With JFrog CLI
         run: |
          # Collect environment variables for the build
          jf rt build-collect-env 
          # Collect VCS details from git and add them to the build
          jf rt build-add-git 
          # Publish build info 
          jf rt build-publish 
          jf build-scan 

  docker-build-and-tag:
      name: Containerization
      runs-on: ubuntu-latest
      needs: [build_test]
      env:
        BUILD_NAME: solar-jfrog
        BUILD_NUMBER: ${{ github.run_number }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup JFrog CLI
          uses: jfrog/setup-jfrog-cli@v4
          env:
            JF_URL: ${{ vars.JF_URL }}
            JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

        - name: Build Tag and push Docker Image
          env:
            IMAGE_NAME: chida1.jfrog.io/solar-docker/${{ env.BUILD_NAME }}:${{ github.run_number }}
          run: |
           jf docker build -t $IMAGE_NAME .
           jf docker push $IMAGE_NAME
 
        - name: Publish Build info With JFrog CLI
          env:
            IMAGE_NAME: chida1.jfrog.io/solar-docker/${{ env.BUILD_NAME }}:${{ github.run_number }}
          run: |
            # Export the build name and build nuber
            # Collect environment variables for the build
            jf rt build-collect-env
            # Collect VCS details from git and add them to the build
            jf rt build-add-git
            # Publish build info
            jf rt build-publish
            #Scan docker image
            jf docker scan ${{ env.IMAGE_NAME }} --build-name ${{ env.BUILD_NAME }} --build-number ${{ github.run_number }} 